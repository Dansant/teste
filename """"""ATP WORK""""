using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;
namespace ATPWORK
{
    class Program
    {
        public struct Funcionarios
        {
            public int matricula;
            public string nome;
            public string cpf;
            public double salario;
            public Funcionarios(int m, string n, string c, double s)
            {
                matricula = m;
                nome = n;
                cpf = c;
                salario = s;
            }
        }
        static public string namefile = @"C:\Users\danie\OneDrive\Área de Trabalho\Funcionários" + ".txt";

        static void Inserir(Funcionarios[] func)
        {
            bool existencia = false;
            if (File.Exists(namefile))
            {
                StreamReader confere = new StreamReader(@"C:\Users\danie\OneDrive\Área de Trabalho\Funcionários" + ".txt");
                for (int i=0; i< func.Length; i++)
                {
                    while (!confere.EndOfStream)
                    {
                        string lin = confere.ReadLine();
                        string[] data = lin.Split(';');
                        if (func[i].matricula == int.Parse(data[0]))
                        {
                            existencia = true;
                        }
                    }
                }
                confere.Close();
                if (existencia == true)
                {
                    Console.WriteLine("Já existe alguem com essa matricula no arquivo.");
                }
                else
                {
                    StreamWriter gravador = new StreamWriter(namefile, true);
                    for (int j = 0; j < func.Length; j++)
                    {
                        gravador.WriteLine(func[j].matricula + ";" + func[j].nome + ";" + func[j].cpf + ";" + func[j].salario);
                    }
                    Console.WriteLine("Gravado com sucesso.");
                    gravador.Close();
                }
            }
            else
            {
                StreamWriter gravador = new StreamWriter(namefile, true);
                for (int j = 0; j < func.Length; j++)
                {
                    gravador.WriteLine(func[j].matricula + ";" + func[j].nome + ";" + func[j].cpf + ";" + func[j].salario);
                }
                gravador.Close();
            }
        }
        static void Listar()
        {
            StreamReader confere = new StreamReader(@"C:\Users\danie\OneDrive\Área de Trabalho\Funcionários" + ".txt");
            while (!confere.EndOfStream)
            {
                string lin = confere.ReadLine();
                string[] data = lin.Split(';');
                Console.WriteLine(data[0]+";"+data[1] + ";" + data[2] + ";" + data[3] + ".");
            }
            confere.Close();
        }
        static void Pesquisar(int mat)
        {
            if (File.Exists(namefile))
            {
                bool pesquisa = false;
                StreamReader leitor = new StreamReader(namefile);
                while (!leitor.EndOfStream)
                {
                    string corda = leitor.ReadLine();
                    string[] file = corda.Split(';');
                    if (mat == int.Parse(file[0]))
                    {
                        Console.WriteLine(file[0] + ";" +file[1]+";"+file[2]+";"+file[3]+".");
                        pesquisa = true;
                    }
                }
                if (pesquisa == false)
                {
                    Console.WriteLine("Funcionário não encontrado.");
                }
                leitor.Close();
            }
            else
            {
                Console.WriteLine("Arquivo não encontrado");
            }
        }
        static void Main(string[] args)
        {

            Console.WriteLine("-Digite 1 para inserir.\n-Digite 2 para mostrar.\n-Digite 3 para pesquisar.");
            switch (Console.ReadLine())
            {
                case "1":
                    int pesq = 0;
                    int count;
                    int matricula;
                    string nome;
                    string cpf;
                    double salario;
                    Console.WriteLine("Insira a quantidade de matrículas que você deseja cadastrar:");
                    count = int.Parse(Console.ReadLine());
                    while (count < 0)
                    {
                        Console.WriteLine("Número inválido\tInsira a quantidade de matrículas que você deseja cadastrar:");
                        count = int.Parse(Console.ReadLine());
                    }
                    int[] matriculass = new int[count];
                    Funcionarios[] func = new Funcionarios[count];
                    Console.Clear();
                    for (int i = 0; i < count; i++)
                    {
                        Console.WriteLine("Insira o número da sua matrícula:");
                        matricula = int.Parse(Console.ReadLine());
                        while (matricula < 0)
                        {
                            Console.WriteLine("Número inválido\tInsira o número da sua matrícula:");
                            matricula = int.Parse(Console.ReadLine());
                        }
                        matriculass[i] = matricula;
                        Console.Clear();
                        Console.WriteLine("Insira seu nome:");
                        nome = Console.ReadLine();
                        Console.Clear();
                        Console.WriteLine("Insira o número do seu CPF:");
                        cpf = Console.ReadLine();
                        while (cpf.Length != 11)
                        {
                            Console.WriteLine("O CPF deve conter 11 números \tInsira novamente o número do seu CPF:");
                            cpf = Console.ReadLine();
                        }
                        Console.Clear();
                        Console.WriteLine("Insira o valor do seu salário:");
                        salario = double.Parse(Console.ReadLine());
                        while (salario < 0)
                        {
                            Console.WriteLine("Número inválido\tInsira novamente o valor do seu salário:");
                            salario = double.Parse(Console.ReadLine());
                        }
                        func[i] = new Funcionarios(matricula, nome, cpf, salario);
                    }
                    Inserir(func);
                    Console.Clear();
                    Console.WriteLine("Pressione qualquer tecla para sair.");
                    break;
                case "2":
                    Console.Clear();
                    Console.WriteLine("\nDados do arquivo:");
                    Listar();
                    Console.WriteLine("Pressione qualquer tecla para sair.");
                    break;
                case "3":
                    Console.WriteLine("Insira a matrícula que você deseja pesquisar a existência:");
                    pesq = int.Parse(Console.ReadLine());
                    Console.Clear();
                    Pesquisar(pesq);
                    Console.WriteLine("Processo finalizado.");
                    Console.WriteLine("Pressione qualquer tecla para sair.");
                    break;
                default:
                    Console.WriteLine("Número inválido.");
                    Console.WriteLine("Pressione qualquer tecla para sair.");
                    break;
            }
            Console.ReadKey();
        }
    }
}
